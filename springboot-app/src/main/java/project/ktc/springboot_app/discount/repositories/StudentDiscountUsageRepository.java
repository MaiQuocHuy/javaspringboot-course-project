package project.ktc.springboot_app.discount.repositories;

import java.math.BigDecimal;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;
import project.ktc.springboot_app.discount.entity.DiscountUsage;

/**
 * Repository for student discount usage operations Handles queries for discount usage from student
 * perspective
 */
@Repository
public interface StudentDiscountUsageRepository extends JpaRepository<DiscountUsage, String> {

  /**
   * Find all discount usages where the current user is the referrer (People using the student's
   * discount code)
   */
  @Query(
      """
            SELECT du FROM DiscountUsage du
            JOIN FETCH du.discount d
            JOIN FETCH du.user u
            JOIN FETCH du.course c
            WHERE du.referredByUser.id = :studentId
            ORDER BY du.usedAt DESC
            """)
  Page<DiscountUsage> findByReferredByUserId(
      @Param("studentId") String studentId, Pageable pageable);

  /** Count total discount usages by student (as referrer) */
  @Query("SELECT COUNT(du) FROM DiscountUsage du WHERE du.referredByUser.id = :studentId")
  Long countByReferredByUserId(@Param("studentId") String studentId);

  /** Calculate total discount amount generated by student's referrals */
  @Query(
      "SELECT COALESCE(SUM(du.discountAmount), 0) FROM DiscountUsage du WHERE du.referredByUser.id = :studentId")
  BigDecimal sumDiscountAmountByReferredByUserId(@Param("studentId") String studentId);
}
